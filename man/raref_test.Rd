% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Rarefaction_funs.R
\name{raref_test}
\alias{raref_test}
\title{Rarefaction testing with rarefactions within permutations}
\usage{
raref_test(comm, ttt, n_raref = 50, nperm = 200, method = "jaccard",
  binary = TRUE, ptype = c("raref_perm_medianp", "raref_perm_meanF",
  "raref_perm_meanp"), return.all = FALSE, dummy_raref = FALSE,
  seed = NULL)
}
\arguments{
\item{comm}{community matrix (patches=rows, species=columns)}

\item{ttt}{treatment vector (treatment id of each patch)}

\item{n_raref}{number of rarefactions}

\item{nperm}{number of permutations}

\item{method}{beta diversity metric (passed to vegan::betadisper)}

\item{binary}{reduce data to presence/absence? (passed to vegan::betadisper)}

\item{ptype}{p-value calculations: "raref_perm_meanF", calculate mean F-statistics within permutations; "raref_perm_meanp", calculate mean p-value across permutations; "raref_perm_medianp" (default), calculate median p-value across permutations.}

\item{return.all}{(logical) return all information rather than summarized test statistics?}

\item{dummy_raref}{(logical) [TESTING ONLY] fake rarefaction? (i.e., don't actually do any rarefaction)}

\item{seed}{random-number seed}
}
\value{
A list with class \code{"htest"} containing the following components:
\item{method}{a string giving the method and number of rarefactions used}
\item{estimate}{the mean beta diversity (measured as median distance from centroid) across all sites and rarefactions}
\item{conf.int}{the confidence interval of the mean beta diversities across rarefactions}
\item{statistic}{the median F-statistic across permutations}
\item{p.value}{the p-value corresponding to the statistic}
}
\description{
Rarefaction testing with rarefactions within permutations
}
\examples{
set.seed(101)
sx <- simComm(n.site=20,p.mix=0.5,n.indiv.site=c(10,20),totsp=c(20,40))
plot(sx)
raref_test(sx[,-1],sx[,1])
tmpf <- function(...) {
   sx <- simComm(...)
   tt <- try(raref_test(sx[,-1],sx[,1])$p.value)
   if (is(tt,"try-error")) return(NA) else return(tt)
}
\dontrun{
## compute power for this case
set.seed(101)
system.time(pvec <- replicate(100,tmpf(n.site=20,p.mix=0.5,
                       n.indiv.site=c(10,20),totsp=c(20,40))))
## ~ 10 minutes
hist(pvec,breaks=20,xlim=c(0,1),col="gray")
mean(pvec<0.05)  ## 0; conservative (but very small sample!)
}
}

